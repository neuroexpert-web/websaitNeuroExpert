import React, { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { mockServices } from '../mock';
import { X, Send } from 'lucide-react';
import { Input } from './ui/input';
import { toast } from 'sonner';
import axios from 'axios';

const BACKEND_URL = process.env.REACT_APP_BACKEND_URL;
const API = `${BACKEND_URL}/api`;

const ServiceCards = () => {
  const [selectedService, setSelectedService] = useState(null);
  const [chatMessages, setChatMessages] = useState([]);
  const [chatInput, setChatInput] = useState('');
  const [chatLoading, setChatLoading] = useState(false);
  const [sessionId] = useState(`session-${Date.now()}`);

  const auditContent = {
    title: '–¶–∏—Ñ—Ä–æ–≤–æ–π –∞—É–¥–∏—Ç –±–∏–∑–Ω–µ—Å–∞',
    price: '–æ—Ç 5000‚ÇΩ',
    icon: 'üíé',
    forWhom: [
      '–í–∞—à —Å–∞–π—Ç –Ω–µ –ø—Ä–∏–Ω–æ—Å–∏—Ç –∑–∞—è–≤–æ–∫, —Ö–æ—Ç—è –Ω–∞ –Ω–µ–≥–æ –∑–∞—Ö–æ–¥—è—Ç –ª—é–¥–∏',
      '–†–µ–∫–ª–∞–º–∞ —Å–ª–∏–≤–∞–µ—Ç –±—é–¥–∂–µ—Ç, –∞ –∫–ª–∏–µ–Ω—Ç–æ–≤ –º–∞–ª–æ',
      '–ù–µ –ø–æ–Ω–∏–º–∞–µ—Ç–µ, –∫—É–¥–∞ —É—Ö–æ–¥—è—Ç –¥–µ–Ω—å–≥–∏ –Ω–∞ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥',
      '–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã –æ–±—Ö–æ–¥—è—Ç –≤–∞—Å, —Ö–æ—Ç—è –≤–∞—à –ø—Ä–æ–¥—É–∫—Ç –Ω–µ —Ö—É–∂–µ',
      '–•–æ—Ç–∏—Ç–µ —Ä–∞—Å—Ç–∏, –Ω–æ –Ω–µ –∑–Ω–∞–µ—Ç–µ, —Å —á–µ–≥–æ –Ω–∞—á–∞—Ç—å',
      '–ù—É–∂–µ–Ω –ø–ª–∞–Ω –¥–µ–π—Å—Ç–≤–∏–π, –∞ –Ω–µ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–µ —Å–æ–≤–µ—Ç—ã'
    ],
    risks: [
      '–í—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ —Ç–µ—Ä—è—Ç—å 20-40% –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π –ø—Ä–∏–±—ã–ª–∏ –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü',
      '–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É—é—Ç—Å—è, –æ–±–æ–π–¥—É—Ç –≤–∞—Å',
      '–í–ª–æ–∂–µ–Ω–∏—è –≤ —Ä–µ–∫–ª–∞–º—É –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤–ø–æ–ª—Å–∏–ª—ã',
      '–ß–µ—Ä–µ–∑ –≥–æ–¥ –æ—Ç—Å—Ç–∞–≤–∞–Ω–∏–µ —Å—Ç–∞–Ω–µ—Ç –∫—Ä–∏—Ç–∏—á–Ω—ã–º ‚Äî –¥–æ–≥–Ω–∞—Ç—å –±—É–¥–µ—Ç –≤ 5 —Ä–∞–∑ –¥–æ—Ä–æ–∂–µ'
    ],
    steps: [
      '–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É (–∫–Ω–æ–ø–∫–∞ –Ω–∏–∂–µ) –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ Telegram',
      '–ú–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –∑–∞ 15 –º–∏–Ω—É—Ç, –∑–∞–¥–∞—Å—Ç 5-7 –≤–æ–ø—Ä–æ—Å–æ–≤ –æ –±–∏–∑–Ω–µ—Å–µ',
      '–û–ø–ª–∞—Ç–∏—Ç–µ 5 000‚ÇΩ (–±–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ –í–ö Pay)',
      '–ü–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø—ã –∫ –∞–Ω–∞–ª–∏—Ç–∏–∫–µ (Google Analytics / –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–∞)',
      '–ß–µ—Ä–µ–∑ 3 –¥–Ω—è –ø–æ–ª—É—á–∏—Ç–µ –æ—Ç—á—ë—Ç + –≤–∏–¥–µ–æ + –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –≤ Telegram'
    ],
    bonuses: [
      '–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∞—è —Å–µ—Å—Å–∏—è 30 –º–∏–Ω—É—Ç (—Å—Ç–æ–∏–º–æ—Å—Ç—å 15 000‚ÇΩ)',
      '–°–∫–∏–¥–∫–∞ 20% –Ω–∞ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π (—ç–∫–æ–Ω–æ–º–∏—è –¥–æ 80 000‚ÇΩ)',
      '–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ AI-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã (—ç–∫–æ–Ω–æ–º–∏—è 5 000‚ÇΩ)'
    ],
    faqs: [
      { q: '–ß—Ç–æ, –µ—Å–ª–∏ —É –º–µ–Ω—è –Ω–µ—Ç —Å–∞–π—Ç–∞?', a: '–ê—É–¥–∏—Ç–∏—Ä—É–µ–º –≤–∞—à–∏ —Å–æ—Ü—Å–µ—Ç–∏, —Ä–µ–∫–ª–∞–º—É, –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å—ã. –ü–æ–¥—Å–∫–∞–∂–µ–º, –Ω—É–∂–µ–Ω –ª–∏ –≤–∞–º —Å–∞–π—Ç, –∏–ª–∏ –º–æ–∂–Ω–æ –æ–±–æ–π—Ç–∏—Å—å –±–µ–∑ –Ω–µ–≥–æ.' },
      { q: '–ü–æ–¥—Ö–æ–¥–∏—Ç –ª–∏ –¥–ª—è –º–∞–ª–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞?', a: '–î–∞! 60% –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ ‚Äî –º–∞–ª—ã–π –±–∏–∑–Ω–µ—Å —Å –æ–±–æ—Ä–æ—Ç–æ–º 3-10 –º–ª–Ω‚ÇΩ/–≥–æ–¥. –ê—É–¥–∏—Ç –æ–∫—É–ø–∞–µ—Ç—Å—è –¥–∞–∂–µ –ø—Ä–∏ —Ç–∞–∫–∏—Ö –º–∞—Å—à—Ç–∞–±–∞—Ö.' },
      { q: '–ú–æ–∂–Ω–æ –ª–∏ –ø–æ–ª—É—á–∏—Ç—å –∞—É–¥–∏—Ç –±—ã—Å—Ç—Ä–µ–µ?', a: '–î–∞, —ç–∫—Å–ø—Ä–µ—Å—Å-–∞—É–¥–∏—Ç –∑–∞ 1 –¥–µ–Ω—å —Å—Ç–æ–∏—Ç 8 000‚ÇΩ. –í –Ω—ë–º –º–µ–Ω—å—à–µ –¥–µ—Ç–∞–ª–µ–π, –Ω–æ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –Ω–∞—Ö–æ–¥–∏–º.' },
      { q: '–í—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ —Å –ª—é–±–æ–π –Ω–∏—à–µ–π?', a: '–î–∞, –æ–ø—ã—Ç –≤ 50+ –æ—Ç—Ä–∞—Å–ª—è—Ö: –æ—Ç e-commerce –¥–æ B2B-—É—Å–ª—É–≥. –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ –≤–∞–∂–Ω–∞ ‚Äî –ø—Ä–æ–±–ª–µ–º—ã —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã.' },
      { q: '–ß—Ç–æ, –µ—Å–ª–∏ –º–Ω–µ –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è –æ—Ç—á—ë—Ç?', a: '–ù–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –Ω–µ —É—Å—Ç—Ä–æ–∏–ª–æ. –õ–∏–±–æ –¥–æ—Ä–∞–±–æ—Ç–∞–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω–æ, –ª–∏–±–æ –≤–µ—Ä–Ω—ë–º –¥–µ–Ω—å–≥–∏. –¢–∞–∫–∏—Ö —Å–ª—É—á–∞–µ–≤ –Ω–µ –±—ã–ª–æ –∑–∞ 2 –≥–æ–¥–∞ —Ä–∞–±–æ—Ç—ã.' }
    ],
    guarantees: [
      '–°—Ä–æ–∫: –û—Ç—á—ë—Ç –≥–æ—Ç–æ–≤ —Ä–æ–≤–Ω–æ —á–µ—Ä–µ–∑ 3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω—è. –û–ø–æ–∑–¥–∞–Ω–∏–µ = –≤–æ–∑–≤—Ä–∞—Ç –¥–µ–Ω–µ–≥ + 10 000‚ÇΩ –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è',
      '–ö–∞—á–µ—Å—Ç–≤–æ: –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥—ë–º –º–∏–Ω–∏–º—É–º 5 —Å–µ—Ä—å—ë–∑–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º ‚Äî –∞—É–¥–∏—Ç –±–µ—Å–ø–ª–∞—Ç–Ω–æ',
      'ROI: –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–æ–º +100 000‚ÇΩ –¥–æ—Ö–æ–¥–∞ –≤ –ø–µ—Ä–≤—ã–µ 3 –º–µ—Å—è—Ü–∞',
      '–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å: NDA, –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —É–¥–∞–ª—è—é—Ç—Å—è –ø–æ—Å–ª–µ –ø—Ä–æ–µ–∫—Ç–∞'
    ]
  };

  const websiteContent = {
    title: '–°–∞–π—Ç—ã –ø–æ–¥ –∫–ª—é—á',
    price: '–æ—Ç 12 000‚ÇΩ',
    icon: 'üöÄ',
    intro: '–°–∞–π—Ç –∏–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –∫—Ä–∞—Å–∏–≤–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ. –≠—Ç–æ —Ü–∏—Ñ—Ä–æ–≤–æ–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–±–æ—Ç–∞–µ—Ç –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ: –ø—Ä–∏–≤–ª–µ–∫–∞–µ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤, —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç –æ –≤–∞—à–µ–º –ø—Ä–æ–¥—É–∫—Ç–µ, —Å–æ–±–∏—Ä–∞–µ—Ç –∑–∞—è–≤–∫–∏ –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–µ–Ω—å–≥–∏, –ø–æ–∫–∞ –≤—ã —Å–ø–∏—Ç–µ.',
    types: [
      {
        title: '–°–∞–π—Ç—ã',
        desc: '–õ–µ–Ω–¥–∏–Ω–≥–∏, –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –ø–æ—Ä—Ç–∞–ª—ã, –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω—ã ‚Äî –≤—Å—ë, —á—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ'
      },
      {
        title: '–ú–æ–±–∏–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
        desc: '–î–ª—è iOS –∏ Android ‚Äî –≤–∞—à –±–∏–∑–Ω–µ—Å –≤ –∫–∞—Ä–º–∞–Ω–µ –∫–ª–∏–µ–Ω—Ç–∞'
      },
      {
        title: 'Web-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
        desc: '–°–ª–æ–∂–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤ (CRM, ERP, –ª–∏—á–Ω—ã–µ –∫–∞–±–∏–Ω–µ—Ç—ã)'
      }
    ],
    problems: [
      {
        title: '"–ö—Ä–∞—Å–∏–≤—ã–π, –Ω–æ –Ω–µ –ø—Ä–æ–¥–∞—ë—Ç"',
        desc: '–î–∏–∑–∞–π–Ω–µ—Ä —Å–¥–µ–ª–∞–ª "–¥–ª—è –¥—É—à–∏", –∞ –∫–æ–Ω–≤–µ—Ä—Å–∏—è 0.5%. –ö–ª–∏–µ–Ω—Ç—ã –∑–∞—Ö–æ–¥—è—Ç –∏ —É—Ö–æ–¥—è—Ç, –Ω–µ –æ—Å—Ç–∞–≤–∏–≤ –∑–∞—è–≤–∫–∏.'
      },
      {
        title: '"–î–æ–ª–≥–æ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è"',
        desc: '–°–∞–π—Ç –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è 7 —Å–µ–∫—É–Ω–¥ ‚Üí 40% –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π —É—Ö–æ–¥—è—Ç, –Ω–µ –¥–æ–∂–¥–∞–≤—à–∏—Å—å. Google –≤–∞—Å –ø–æ–Ω–∏–∂–∞–µ—Ç –≤ –≤—ã–¥–∞—á–µ.'
      },
      {
        title: '"–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞—Ö"',
        desc: '70% —Ç—Ä–∞—Ñ–∏–∫–∞ —Å –º–æ–±–∏–ª—å–Ω—ã—Ö, –Ω–æ –∫–Ω–æ–ø–∫–∏ –Ω–µ –Ω–∞–∂–∏–º–∞—é—Ç—Å—è, —Ç–µ–∫—Å—Ç –Ω–µ —á–∏—Ç–∞–µ—Ç—Å—è. –í—ã —Ç–µ—Ä—è–µ—Ç–µ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –∫–ª–∏–µ–Ω—Ç–æ–≤.'
      },
      {
        title: '"–°–¥–µ–ª–∞–ª–∏ –∏ –∑–∞–±—ã–ª–∏"',
        desc: '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –∏—Å—á–µ–∑ –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞. –•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç ‚Äî –Ω–µ–∫–æ–º—É. –°–∞–π—Ç "—É–º–µ—Ä" —á–µ—Ä–µ–∑ –ø–æ–ª–≥–æ–¥–∞.'
      },
      {
        title: '"–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å ‚Äî –¥—ã—Ä–∞"',
        desc: '–í–∑–ª–æ–º–∞–ª–∏, —É–∫—Ä–∞–ª–∏ –±–∞–∑—É –∫–ª–∏–µ–Ω—Ç–æ–≤, –Ω–∞–≤–µ—Å–∏–ª–∏ –≤–∏—Ä—É—Å—ã. –†–µ–ø—É—Ç–∞—Ü–∏—è —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∞, —à—Ç—Ä–∞—Ñ—ã –æ—Ç –†–æ—Å–∫–æ–º–Ω–∞–¥–∑–æ—Ä–∞.'
      },
      {
        title: '"–ü–µ—Ä–µ–ø–ª–∞—Ç–∏–ª–∏ –≤–¥–≤–æ–µ"',
        desc: '–§—Ä–∏–ª–∞–Ω—Å–µ—Ä –æ–±–µ—â–∞–ª –∑–∞ 30 000‚ÇΩ, –≤ –∏—Ç–æ–≥–µ –∑–∞–ø–ª–∞—Ç–∏–ª–∏ 150 000‚ÇΩ –∑–∞ –ø–µ—Ä–µ–¥–µ–ª–∫–∏ –∏ "–Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ" –¥–æ—Ä–∞–±–æ—Ç–∫–∏.'
      }
    ],
    approach: [
      '–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∞—à—É –Ω–∏—à—É ‚Üí –∏–∑—É—á–∞–µ–º –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤, –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤, –ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏',
      '–ü—Ä–æ–µ–∫—Ç–∏—Ä—É–µ–º –ø—É—Ç—å –∫–ª–∏–µ–Ω—Ç–∞ ‚Üí –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –∫–ª–∏–∫–∞ –¥–æ –ø–æ–∫—É–ø–∫–∏, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —à–∞–≥–æ–≤',
      '–°—Ç—Ä–æ–∏–º –Ω–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö ‚Üí –±—ã—Å—Ç—Ä–æ, –±–µ–∑–æ–ø–∞—Å–Ω–æ, –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ',
      '–¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ –∑–∞–ø—É—Å–∫–∞ ‚Üí 200+ –ø—Ä–æ–≤–µ—Ä–æ–∫, —á—Ç–æ–±—ã –≤—Å—ë —Ä–∞–±–æ—Ç–∞–ª–æ –∏–¥–µ–∞–ª—å–Ω–æ',
      '–°–æ–ø—Ä–æ–≤–æ–∂–¥–∞–µ–º –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ ‚Üí –æ–±—É—á–∞–µ–º –∫–æ–º–∞–Ω–¥—É, –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –±–∞–≥–∏, —Ä–∞–∑–≤–∏–≤–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç'
    ]
  };

  const handleSendMessage = async () => {
    if (!chatInput.trim()) return;

    const userMessage = chatInput;
    setChatInput('');
    setChatMessages(prev => [...prev, { role: 'user', content: userMessage }]);
    setChatLoading(true);

    try {
      const response = await axios.post(`${API}/chat`, {
        session_id: sessionId,
        message: userMessage
      });

      if (response.data.response) {
        setChatMessages(prev => [...prev, { role: 'assistant', content: response.data.response }]);
      }
    } catch (error) {
      console.error('Chat error:', error);
      toast.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è');
    } finally {
      setChatLoading(false);
    }
  };

  return (
    <>
      <section id="services" className="relative py-20 px-6 bg-[#121826]">
        <div className="max-w-7xl mx-auto">
          <motion.h2
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="text-5xl font-bold text-white text-center mb-16"
          >
            –ù–∞—à–∏ —É—Å–ª—É–≥–∏
          </motion.h2>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            {mockServices.map((service, index) => (
              <motion.div
                key={service.id}
                initial={{ opacity: 0, y: 50 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6, delay: index * 0.1 }}
                className="group relative"
              >
                <div className="relative p-6 rounded-none bg-white/5 backdrop-blur-xl border border-white/20 hover:border-[#7dd3fc] transition-all duration-400 h-full flex flex-col">
                  <div className="text-5xl mb-4">{service.icon}</div>
                  <h3 className="text-xl font-semibold text-white mb-2">{service.title}</h3>
                  <div className="text-[#7dd3fc] font-bold text-lg mb-3">{service.price}</div>
                  <p className="text-white/70 text-sm leading-relaxed mb-6 flex-grow">{service.shortDesc}</p>
                  
                  {/* Neon Button */}
                  <motion.button
                    onClick={() => setSelectedService(service)}
                    whileHover={{ scale: 1.05 }}
                    whileTap={{ scale: 0.95 }}
                    className="relative w-full px-6 py-3 bg-transparent border-2 border-[#7dd3fc] text-[#7dd3fc] font-semibold rounded-none overflow-hidden group-hover:text-black transition-colors duration-300"
                  >
                    <span className="relative z-10">AI –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è</span>
                    <motion.div
                      className="absolute inset-0 bg-[#7dd3fc]"
                      initial={{ x: '-100%' }}
                      whileHover={{ x: 0 }}
                      transition={{ duration: 0.3 }}
                    />
                    {/* Neon glow */}
                    <div className="absolute inset-0 bg-[#7dd3fc] blur-xl opacity-0 group-hover:opacity-50 transition-opacity duration-300" />
                  </motion.button>
                </div>
              </motion.div>
            ))}
          </div>
        </div>
      </section>

      {/* Fullscreen Modal */}
      <AnimatePresence>
        {selectedService && (
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="fixed inset-0 z-50 bg-[#0b0f17] overflow-hidden flex flex-col"
          >
            {/* Header */}
            <div className="flex-shrink-0 bg-[#0b0f17]/95 backdrop-blur-xl border-b border-white/10 px-6 py-4 flex items-center justify-between">
              <div className="flex items-center gap-4">
                <span className="text-4xl">
                  {selectedService.id === 1 ? auditContent.icon : selectedService.id === 3 ? websiteContent.icon : selectedService.icon}
                </span>
                <div>
                  <h2 className="text-2xl font-bold text-white">
                    {selectedService.id === 1 ? auditContent.title : selectedService.id === 3 ? websiteContent.title : selectedService.title}
                  </h2>
                  <p className="text-[#7dd3fc]">
                    {selectedService.id === 1 ? auditContent.price : selectedService.id === 3 ? websiteContent.price : selectedService.price}
                  </p>
                </div>
              </div>
              <button
                onClick={() => setSelectedService(null)}
                className="p-2 hover:bg-white/10 rounded-lg transition-colors"
              >
                <X className="w-6 h-6 text-white" />
              </button>
            </div>

            {/* Scrollable Content */}
            <div className="flex-1 overflow-y-auto">
              <div className="max-w-5xl mx-auto px-6 py-12 pb-64">
                {selectedService.id === 1 && (
                  <>
                    {/* For Whom */}
                    <section className="mb-12">
                      <h3 className="text-3xl font-bold text-white mb-6">–î–ª—è –∫–æ–≥–æ —ç—Ç–æ—Ç –∞—É–¥–∏—Ç?</h3>
                      <div className="space-y-3">
                        {auditContent.forWhom.map((item, idx) => (
                          <motion.div
                            key={idx}
                            initial={{ opacity: 0, x: -20 }}
                            whileInView={{ opacity: 1, x: 0 }}
                            viewport={{ once: true }}
                            transition={{ delay: idx * 0.1 }}
                            className="flex items-start gap-3 p-4 bg-white/5 rounded-lg"
                          >
                            <span className="text-green-400 text-xl">‚úÖ</span>
                            <span className="text-white/80">{item}</span>
                          </motion.div>
                        ))}
                      </div>
                    </section>

                    {/* Risks */}
                    <section className="mb-12">
                      <h3 className="text-3xl font-bold text-white mb-6">–ß—Ç–æ –±—É–¥–µ—Ç, –µ—Å–ª–∏ –Ω–µ –¥–µ–ª–∞—Ç—å –∞—É–¥–∏—Ç?</h3>
                      <div className="space-y-3">
                        {auditContent.risks.map((item, idx) => (
                          <motion.div
                            key={idx}
                            initial={{ opacity: 0, x: -20 }}
                            whileInView={{ opacity: 1, x: 0 }}
                            viewport={{ once: true }}
                            transition={{ delay: idx * 0.1 }}
                            className="flex items-start gap-3 p-4 bg-red-500/10 border border-red-500/20 rounded-lg"
                          >
                            <span className="text-red-400 text-xl">‚ùå</span>
                            <span className="text-white/80">{item}</span>
                          </motion.div>
                        ))}
                      </div>
                    </section>

                    {/* Steps */}
                    <section className="mb-12">
                      <h3 className="text-3xl font-bold text-white mb-6">–ö–∞–∫ –∑–∞–∫–∞–∑–∞—Ç—å –∞—É–¥–∏—Ç?</h3>
                      <div className="space-y-4">
                        {auditContent.steps.map((step, idx) => (
                          <motion.div
                            key={idx}
                            initial={{ opacity: 0, x: -20 }}
                            whileInView={{ opacity: 1, x: 0 }}
                            viewport={{ once: true }}
                            transition={{ delay: idx * 0.1 }}
                            className="flex items-start gap-4 p-4 bg-white/5 rounded-lg"
                          >
                            <div className="flex-shrink-0 w-8 h-8 bg-[#7dd3fc] rounded-full flex items-center justify-center text-black font-bold">
                              {idx + 1}
                            </div>
                            <span className="text-white/80">{step}</span>
                          </motion.div>
                        ))}
                      </div>
                    </section>

                    {/* Bonuses */}
                    <section className="mb-12">
                      <h3 className="text-3xl font-bold text-white mb-6">–ë–æ–Ω—É—Å –¥–ª—è –ø–µ—Ä–≤—ã—Ö 10 –∫–ª–∏–µ–Ω—Ç–æ–≤</h3>
                      <div className="space-y-4">
                        {auditContent.bonuses.map((bonus, idx) => (
                          <motion.div
                            key={idx}
                            initial={{ opacity: 0, scale: 0.9 }}
                            whileInView={{ opacity: 1, scale: 1 }}
                            viewport={{ once: true }}
                            transition={{ delay: idx * 0.1 }}
                            className="p-6 bg-gradient-to-r from-[#7dd3fc]/20 to-[#764ba2]/20 border border-[#7dd3fc]/30 rounded-lg"
                          >
                            <div className="flex items-start gap-3">
                              <span className="text-2xl">üéÅ</span>
                              <span className="text-white">{bonus}</span>
                            </div>
                          </motion.div>
                        ))}
                      </div>
                    </section>

                    {/* FAQs */}
                    <section className="mb-12">
                      <h3 className="text-3xl font-bold text-white mb-6">–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã</h3>
                      <div className="space-y-4">
                        {auditContent.faqs.map((faq, idx) => (
                          <motion.div
                            key={idx}
                            initial={{ opacity: 0, y: 20 }}
                            whileInView={{ opacity: 1, y: 0 }}
                            viewport={{ once: true }}
                            transition={{ delay: idx * 0.1 }}
                            className="p-6 bg-white/5 rounded-lg"
                          >
                            <div className="flex items-start gap-3 mb-3">
                              <span className="text-[#7dd3fc] text-xl">‚ùì</span>
                              <h4 className="text-lg font-semibold text-white">{faq.q}</h4>
                            </div>
                            <p className="text-white/70 ml-9">{faq.a}</p>
                          </motion.div>
                        ))}
                      </div>
                    </section>

                    {/* Guarantees */}
                    <section className="mb-12">
                      <h3 className="text-3xl font-bold text-white mb-6">–ì–∞—Ä–∞–Ω—Ç–∏–∏ NeuroExpert</h3>
                      <div className="space-y-3">
                        {auditContent.guarantees.map((guarantee, idx) => (
                          <motion.div
                            key={idx}
                            initial={{ opacity: 0, x: -20 }}
                            whileInView={{ opacity: 1, x: 0 }}
                            viewport={{ once: true }}
                            transition={{ delay: idx * 0.1 }}
                            className="flex items-start gap-3 p-4 bg-green-500/10 border border-green-500/20 rounded-lg"
                          >
                            <span className="text-green-400 text-xl">‚úÖ</span>
                            <span className="text-white/80">{guarantee}</span>
                          </motion.div>
                        ))}
                      </div>
                    </section>

                    {/* CTA */}
                    <div className="text-center py-8">
                      <p className="text-white/60 mb-4">‚è∞ –û—Å—Ç–∞–ª–æ—Å—å 3 –º–µ—Å—Ç–∞ –ø–æ –∞–∫—Ü–∏–∏ –≤ –æ–∫—Ç—è–±—Ä–µ</p>
                      <p className="text-red-400 mb-8">–¶–µ–Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞ –¥–æ 31 –æ–∫—Ç—è–±—Ä—è 2025. –° 1 –Ω–æ—è–±—Ä—è —Å—Ç–æ–∏–º–æ—Å—Ç—å ‚Äî 12 000‚ÇΩ.</p>
                      <div className="flex flex-wrap gap-4 justify-center">
                        <motion.button
                          whileHover={{ scale: 1.05 }}
                          whileTap={{ scale: 0.95 }}
                          className="px-8 py-4 bg-[#7dd3fc] text-black font-bold text-lg rounded-none hover:shadow-2xl hover:shadow-[#7dd3fc]/50"
                        >
                          –û–°–¢–ê–í–ò–¢–¨ –ó–ê–Ø–í–ö–£
                        </motion.button>
                        <motion.button
                          whileHover={{ scale: 1.05 }}
                          whileTap={{ scale: 0.95 }}
                          className="px-8 py-4 bg-white/10 text-white font-bold text-lg rounded-none border border-white/20 hover:bg-white hover:text-black"
                        >
                          –ù–ê–ü–ò–°–ê–¢–¨ –í TELEGRAM
                        </motion.button>
                      </div>
                    </div>
                  </>
                )}

                {/* Website Content */}
                {selectedService.id === 3 && (
                  <>
                    {/* Intro */}
                    <section className="mb-12">
                      <div className="p-6 bg-gradient-to-r from-[#7dd3fc]/20 to-[#764ba2]/20 border border-[#7dd3fc]/30 rounded-lg">
                        <h3 className="text-2xl font-bold text-white mb-4">–ß—Ç–æ –º—ã —Å–æ–∑–¥–∞—ë–º? –ü—Ä–æ—Å—Ç–æ –æ —Å–ª–æ–∂–Ω–æ–º</h3>
                        <p className="text-white/80 text-lg leading-relaxed">{websiteContent.intro}</p>
                      </div>
                    </section>

                    {/* Types */}
                    <section className="mb-12">
                      <h3 className="text-3xl font-bold text-white mb-6">–ú—ã —Å–æ–∑–¥–∞—ë–º digital-–ø—Ä–æ–¥—É–∫—Ç—ã —Ç—Ä—ë—Ö —Ç–∏–ø–æ–≤:</h3>
                      <div className="grid md:grid-cols-3 gap-6">
                        {websiteContent.types.map((type, idx) => (
                          <motion.div
                            key={idx}
                            initial={{ opacity: 0, y: 30 }}
                            whileInView={{ opacity: 1, y: 0 }}
                            viewport={{ once: true }}
                            transition={{ delay: idx * 0.1 }}
                            className="p-6 bg-white/5 rounded-lg border border-white/10 hover:border-[#7dd3fc] transition-all"
                          >
                            <h4 className="text-xl font-semibold text-[#7dd3fc] mb-3">{type.title}</h4>
                            <p className="text-white/70">{type.desc}</p>
                          </motion.div>
                        ))}
                      </div>
                    </section>

                    {/* Problems */}
                    <section className="mb-12">
                      <h3 className="text-3xl font-bold text-white mb-6">–ü–æ—á–µ–º—É –≤–∞—à —Å–∞–π—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç?</h3>
                      <p className="text-white/60 mb-8">–¢–∏–ø–∏—á–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã, –∫–æ—Ç–æ—Ä—ã–µ –º—ã —Ä–µ—à–∞–µ–º:</p>
                      <div className="space-y-4">
                        {websiteContent.problems.map((problem, idx) => (
                          <motion.div
                            key={idx}
                            initial={{ opacity: 0, x: -20 }}
                            whileInView={{ opacity: 1, x: 0 }}
                            viewport={{ once: true }}
                            transition={{ delay: idx * 0.1 }}
                            className="p-6 bg-red-500/10 border border-red-500/20 rounded-lg"
                          >
                            <div className="flex items-start gap-3">
                              <span className="text-red-400 text-xl flex-shrink-0">‚ùå</span>
                              <div>
                                <h4 className="text-lg font-semibold text-white mb-2">{problem.title}</h4>
                                <p className="text-white/70">{problem.desc}</p>
                              </div>
                            </div>
                          </motion.div>
                        ))}
                      </div>
                    </section>

                    {/* Approach */}
                    <section className="mb-12">
                      <h3 className="text-3xl font-bold text-white mb-6">–ù–∞—à –ø–æ–¥—Ö–æ–¥: —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ + –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞</h3>
                      <p className="text-white/80 text-lg mb-8">–ú—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ "—Ä–∏—Å—É–µ–º —Å–∞–π—Ç—ã". –ö–∞–∂–¥—ã–π –ø—Ä–æ–µ–∫—Ç ‚Äî —ç—Ç–æ –∏–Ω–∂–µ–Ω–µ—Ä–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –±–∏–∑–Ω–µ—Å-–∑–∞–¥–∞—á–∏:</p>
                      <div className="space-y-4">
                        {websiteContent.approach.map((step, idx) => (
                          <motion.div
                            key={idx}
                            initial={{ opacity: 0, x: -20 }}
                            whileInView={{ opacity: 1, x: 0 }}
                            viewport={{ once: true }}
                            transition={{ delay: idx * 0.1 }}
                            className="flex items-start gap-4 p-4 bg-white/5 rounded-lg"
                          >
                            <span className="text-green-400 text-xl flex-shrink-0">‚úÖ</span>
                            <span className="text-white/80">{step}</span>
                          </motion.div>
                        ))}
                      </div>
                    </section>

                    {/* CTA */}
                    <div className="text-center py-8">
                      <p className="text-white/60 mb-8 text-lg">–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å —Å–≤–æ–π digital-–ø—Ä–æ–µ–∫—Ç?</p>
                      <div className="flex flex-wrap gap-4 justify-center">
                        <motion.button
                          whileHover={{ scale: 1.05 }}
                          whileTap={{ scale: 0.95 }}
                          className="px-8 py-4 bg-[#7dd3fc] text-black font-bold text-lg rounded-none hover:shadow-2xl hover:shadow-[#7dd3fc]/50"
                        >
                          –ü–û–õ–£–ß–ò–¢–¨ –†–ê–°–ß–Å–¢
                        </motion.button>
                        <motion.button
                          whileHover={{ scale: 1.05 }}
                          whileTap={{ scale: 0.95 }}
                          className="px-8 py-4 bg-white/10 text-white font-bold text-lg rounded-none border border-white/20 hover:bg-white hover:text-black"
                        >
                          –ü–û–†–¢–§–û–õ–ò–û
                        </motion.button>
                      </div>
                    </div>
                  </>
                )}
              </div>
            </div>

            {/* AI Chat at bottom - Fixed */}
            <div className="flex-shrink-0 bg-[#121826] border-t border-white/10 p-4">
              <div className="max-w-5xl mx-auto">
                {/* Chat Messages */}
                {chatMessages.length > 0 && (
                  <div className="mb-4 max-h-40 overflow-y-auto space-y-2">
                    {chatMessages.map((msg, idx) => (
                      <div
                        key={idx}
                        className={`flex ${msg.role === 'user' ? 'justify-end' : 'justify-start'}`}
                      >
                        <div
                          className={`max-w-[70%] p-3 rounded-lg ${
                            msg.role === 'user'
                              ? 'bg-[#7dd3fc] text-black'
                              : 'bg-white/10 text-white'
                          }`}
                        >
                          {msg.content}
                        </div>
                      </div>
                    ))}
                  </div>
                )}

                {/* Input */}
                <div className="flex gap-2">
                  <div className="relative flex-1">
                    <Input
                      value={chatInput}
                      onChange={(e) => setChatInput(e.target.value)}
                      onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}
                      placeholder="–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—É..."
                      className="flex-1 bg-white/10 border-white/20 text-white placeholder:text-white/40 rounded-none pr-10"
                      disabled={chatLoading}
                    />
                    {chatInput && (
                      <button
                        onClick={() => setChatInput('')}
                        className="absolute right-2 top-1/2 -translate-y-1/2 p-1 hover:bg-white/10 rounded transition-colors"
                      >
                        <X className="w-4 h-4 text-white/60" />
                      </button>
                    )}
                  </div>
                  <motion.button
                    whileHover={{ scale: 1.05 }}
                    whileTap={{ scale: 0.95 }}
                    onClick={handleSendMessage}
                    disabled={chatLoading}
                    className="px-6 py-2 bg-[#7dd3fc] text-black rounded-none hover:bg-white transition-colors disabled:opacity-50"
                  >
                    <Send className="w-5 h-5" />
                  </motion.button>
                </div>
              </div>
            </div>
          </motion.div>
        )}
      </AnimatePresence>
    </>
  );
};

export default ServiceCards;
